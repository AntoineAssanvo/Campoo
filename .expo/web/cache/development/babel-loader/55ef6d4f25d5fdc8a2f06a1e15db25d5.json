{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\iles\\\\Documents\\\\DevIles\\\\Campoo\\\\app\\\\screens\\\\AssosAddPost.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport LabelCampoo from \"../components/LabelCampoo\";\nimport TextInputAssos from \"../components/TextInputAssos\";\nimport ArrowLSvg from \"../components/ArrowLSvg\";\nimport SendButton from \"../../assets/svg/SendButton\";\nimport HeaderAddPost from \"../components/HeaderAddPost\";\n\nvar AssosAddPost = function (_Component) {\n  _inherits(AssosAddPost, _Component);\n\n  var _super = _createSuper(AssosAddPost);\n\n  function AssosAddPost() {\n    _classCallCheck(this, AssosAddPost);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AssosAddPost, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, React.createElement(HeaderAddPost, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }), React.createElement(LabelCampoo, {\n        style: styles.labelInput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, \"Que souhaitez-vous dire ?\"), React.createElement(TextInputAssos, {\n        limitCaracter: \"limit de xxx caracter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return AssosAddPost;\n}(Component);\n\nexport { AssosAddPost as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerAddPost: {\n    flex: 0,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: '5%',\n    alignItems: 'center',\n    width: '100%',\n    height: 50\n  },\n  labelInput: {\n    fontSize: 30,\n    color: 'red',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/iles/Documents/DevIles/Campoo/app/screens/AssosAddPost.js"],"names":["React","Component","LabelCampoo","TextInputAssos","ArrowLSvg","SendButton","HeaderAddPost","AssosAddPost","styles","container","labelInput","StyleSheet","create","flex","paddingTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","alignItems","headerAddPost","paddingHorizontal","width","height","fontSize","color","fontWeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,SAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;;IAGqBC,Y;;;;;;;;;;;;;6BACR;AACL,aACI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAQI,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAED,MAAM,CAACE,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCARJ,EAYI,oBAAC,cAAD;AAAgB,QAAA,aAAa,EAAC,uBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ;AAkBH;;;;EApBqCT,S;;SAArBM,Y;AAuBrB,IAAMC,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAE7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAGPC,IAAAA,UAAU,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,SAAS,CAACC,aAAtC,GAAsD,CAH3D;AAIPC,IAAAA,aAAa,EAAE,QAJR;AAKPC,IAAAA,cAAc,EAAE,QALT;AAOPC,IAAAA,UAAU,EAAE;AAPL,GAFkB;AAc7BC,EAAAA,aAAa,EAAE;AAEXT,IAAAA,IAAI,EAAE,CAFK;AAGXM,IAAAA,aAAa,EAAE,KAHJ;AAIXC,IAAAA,cAAc,EAAE,eAJL;AAKXG,IAAAA,iBAAiB,EAAE,IALR;AAMXF,IAAAA,UAAU,EAAE,QAND;AAOXG,IAAAA,KAAK,EAAE,MAPI;AAQXC,IAAAA,MAAM,EAAE;AARG,GAdc;AAyB7Bf,EAAAA,UAAU,EAAE;AACRgB,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,KAAK,EAAE,KAFC;AAGRC,IAAAA,UAAU,EAAE;AAHJ;AAzBiB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, StyleSheet, View, SafeAreaView, StatusBar, Platform, TouchableOpacity } from 'react-native'\r\nimport LabelCampoo from '../components/LabelCampoo';\r\nimport TextInputAssos from '../components/TextInputAssos';\r\nimport ArrowLSvg from '../components/ArrowLSvg'\r\nimport SendButton from '../../assets/svg/SendButton'\r\nimport HeaderAddPost from '../components/HeaderAddPost'\r\n\r\n\r\nexport default class AssosAddPost extends Component {\r\n    render() {\r\n        return (\r\n            <SafeAreaView style={styles.container}>\r\n\r\n\r\n                {/* header du screen */}\r\n                <HeaderAddPost />\r\n\r\n                {/* titre de la zone de texte */}\r\n\r\n                <LabelCampoo style={styles.labelInput} >Que souhaitez-vous dire ?</LabelCampoo>\r\n\r\n                {/* zone d'ecriture de texte */}\r\n\r\n                <TextInputAssos limitCaracter=\"limit de xxx caracter\" />\r\n\r\n            </SafeAreaView>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        //  pour detecter la platform\r\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n\r\n        alignItems: 'center',\r\n\r\n\r\n    },\r\n\r\n    headerAddPost: {\r\n\r\n        flex: 0,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: '5%',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: 50,\r\n\r\n    },\r\n    labelInput: {\r\n        fontSize: 30,\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}