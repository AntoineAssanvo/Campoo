{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\iles\\\\Documents\\\\DevIles\\\\Campoo\\\\app\\\\screens\\\\settings\\\\SettingPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TopNav from \"../../components/TopNav\";\nimport ButtonSettings from \"../../components/ButtonSettings\";\nimport ButtonCampoo from \"../../components/ButtonCampoo\";\nimport ButtonLarge from \"../../components/ButtonLarge\";\n\nvar SettingPage = function (_React$Component) {\n  _inherits(SettingPage, _React$Component);\n\n  var _super = _createSuper(SettingPage);\n\n  function SettingPage() {\n    _classCallCheck(this, SettingPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SettingPage, [{\n    key: \"NamePace\",\n    value: function NamePace() {\n      return;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, React.createElement(TopNav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, \"R\\xE9glage\"), React.createElement(View, {\n        style: styles.settingsContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.SizeOnScroll,\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.settingsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }\n      }, \" Compte \")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, React.createElement(ButtonSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, \" Pr\\xE9nom\")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, React.createElement(ButtonSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      }, \" Mot de passe\")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, React.createElement(ButtonSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, \" Devenir un compte associatif\")), React.createElement(View, {\n        style: styles.settingsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }, \" Contactez-nous \")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, React.createElement(ButtonSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, \" Aide et assistance\")), React.createElement(View, {\n        style: styles.settingsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }, \" Communaut\\xE9 \")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, React.createElement(ButtonSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, \" R\\xE9gles de la Communaut\\xE9\")), React.createElement(View, {\n        style: styles.settingsTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, \" Mentions l\\xE9gales \")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }, React.createElement(ButtonSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }\n      }, \" Politique de Confidentailit\\xE9\")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, React.createElement(ButtonSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, \" Conditions g\\xE9n\\xE9rales d\\u2019utilisation\")), React.createElement(View, {\n        style: styles.GeneraleBtnContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, React.createElement(ButtonCampoo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.logOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 43\n        }\n      }, \" D\\xE9connexion\")), React.createElement(TouchableOpacity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.leaveBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 48\n        }\n      }, \" Supprimer mon compte\"))))));\n    }\n  }]);\n\n  return SettingPage;\n}(React.Component);\n\nexport { SettingPage as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    flexDirection: 'column',\n    position: 'relative',\n    margin: 15,\n    backgroundColor: '#fff'\n  },\n  settingsContent: {\n    flex: 2,\n    marginTop: 10\n  },\n  settingsTitle: {\n    flex: 1,\n    height: 50,\n    width: '100%',\n    borderBottomWidth: 1,\n    justifyContent: 'center',\n    borderColor: 'rgba(158, 150, 150, .3)'\n  },\n  FakePlaceholder: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'flex-end'\n  },\n  GeneraleBtnContainer: {\n    flex: 2,\n    width: '100%',\n    marginTop: 50,\n    justifyContent: \"center\",\n    alignItems: 'center',\n    color: '#fff'\n  },\n  logOut: {\n    fontWeight: 'bold'\n  },\n  leaveBtn: {\n    zIndex: 200,\n    marginTop: 15,\n    borderRadius: 15,\n    color: '#EB7653'\n  }\n});","map":{"version":3,"sources":["C:/Users/iles/Documents/DevIles/Campoo/app/screens/settings/SettingPage.js"],"names":["React","TopNav","ButtonSettings","ButtonCampoo","ButtonLarge","SettingPage","styles","container","settingsContent","SizeOnScroll","settingsTitle","GeneraleBtnContainer","logOut","leaveBtn","Component","StyleSheet","create","flex","paddingTop","Platform","OS","StatusBar","currentHeight","flexDirection","position","margin","backgroundColor","marginTop","height","width","borderBottomWidth","justifyContent","borderColor","FakePlaceholder","alignItems","color","fontWeight","zIndex","borderRadius"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, StatusBar, TouchableOpacity, SafeAreaView, ScrollView, View, Text } from 'react-native';\r\nimport TopNav from \"../../components/TopNav\";\r\nimport ButtonSettings from '../../components/ButtonSettings';\r\nimport ButtonCampoo from '../../components/ButtonCampoo';\r\nimport ButtonLarge from \"../../components/ButtonLarge\";\r\n\r\nexport default class SettingPage extends React.Component {\r\n\r\n    NamePace() {\r\n        return\r\n\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n\r\n            <SafeAreaView style={styles.container}>\r\n                <TopNav>Réglage</TopNav>\r\n                <View style={styles.settingsContent}>\r\n                    <ScrollView style={styles.SizeOnScroll} showsVerticalScrollIndicator={false} >\r\n\r\n                        {/* Les differentes rubrique */}\r\n                        {/* Titre */}\r\n                        <View style={styles.settingsTitle}>\r\n                            <Text > Compte </Text>\r\n                        </View>\r\n\r\n                        {/* Rubrique */}\r\n                        <TouchableOpacity>\r\n                            <ButtonSettings> Prénom</ButtonSettings>\r\n                        </TouchableOpacity>\r\n                        {/* Rubrique */}\r\n                        <TouchableOpacity>\r\n                            <ButtonSettings> Mot de passe</ButtonSettings>\r\n                        </TouchableOpacity>\r\n                        {/* Rubrique */}\r\n                        <TouchableOpacity>\r\n                            <ButtonSettings> Devenir un compte associatif</ButtonSettings>\r\n                        </TouchableOpacity>\r\n\r\n                        {/* Titre de la rubrique */}\r\n                        <View style={styles.settingsTitle}>\r\n                            <Text > Contactez-nous </Text>\r\n                        </View>\r\n                        {/* Rubrique */}\r\n                        <TouchableOpacity>\r\n                            <ButtonSettings> Aide et assistance</ButtonSettings>\r\n                        </TouchableOpacity>\r\n\r\n                        {/* Titre... */}\r\n                        <View style={styles.settingsTitle}>\r\n                            <Text > Communauté </Text>\r\n                        </View>\r\n                        {/* Rubrique */}\r\n                        <TouchableOpacity>\r\n                            <ButtonSettings> Régles de la Communauté</ButtonSettings>\r\n                        </TouchableOpacity>\r\n                        {/* Titre */}\r\n                        <View style={styles.settingsTitle}>\r\n                            <Text > Mentions légales </Text>\r\n                        </View>\r\n                        {/* Rubrique */}\r\n                        <TouchableOpacity>\r\n                            <ButtonSettings> Politique de Confidentailité</ButtonSettings>\r\n                        </TouchableOpacity>\r\n                        {/* Rubrique */}\r\n                        <TouchableOpacity>\r\n                            <ButtonSettings> Conditions générales d’utilisation</ButtonSettings>\r\n                        </TouchableOpacity>\r\n                        {/* Titre */}\r\n                        <View style={styles.GeneraleBtnContainer}>\r\n                            {/* Btn deconnexion */}\r\n                            <ButtonCampoo><Text style={styles.logOut}  > Déconnexion</Text></ButtonCampoo>\r\n\r\n                            {/* BTN Suppression */}\r\n                            <TouchableOpacity ><Text style={styles.leaveBtn}> Supprimer mon compte</Text></TouchableOpacity>\r\n\r\n\r\n                        </View>\r\n\r\n\r\n                    </ScrollView>\r\n\r\n                </View>\r\n\r\n            </SafeAreaView>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n// style generale\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n\r\n        flex: 1,\r\n        // test pour detecter la platform\r\n        paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\r\n        flexDirection: 'column',\r\n        position: 'relative',\r\n        margin: 15,\r\n        backgroundColor: '#fff',\r\n        //   alignItems: 'center',\r\n\r\n    },\r\n    settingsContent: {\r\n        flex:2,\r\n        marginTop: 10,\r\n        \r\n\r\n    },\r\n    settingsTitle: {\r\n        flex: 1,\r\n        height: 50,\r\n        width: '100%',\r\n        borderBottomWidth: 1,\r\n        justifyContent: 'center',\r\n        borderColor: 'rgba(158, 150, 150, .3)',\r\n    },\r\n    FakePlaceholder: {\r\n        flex: 1,\r\n        width: '100%',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    GeneraleBtnContainer: {\r\n        flex: 2,\r\n        width: '100%',\r\n        marginTop: 50,\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n        color: '#fff',\r\n    },\r\n    logOut: {\r\n        fontWeight: 'bold',\r\n    },\r\n    leaveBtn: {\r\n\r\n        zIndex: 200,\r\n        marginTop: 15,\r\n        borderRadius: 15,\r\n        color: '#EB7653',\r\n\r\n\r\n    }\r\n\r\n});"]},"metadata":{},"sourceType":"module"}