{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\iles\\\\Documents\\\\DevIles\\\\Campoo\\\\app\\\\components\\\\ButtonCampoo.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar ButtonCampoo = function (_React$Component) {\n  _inherits(ButtonCampoo, _React$Component);\n\n  var _super = _createSuper(ButtonCampoo);\n\n  function ButtonCampoo() {\n    _classCallCheck(this, ButtonCampoo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ButtonCampoo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        style: [styles.button, this.props.style],\n        onPress: this.props.onPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.touchable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.connexionText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }\n      }, this.props.children)));\n    }\n  }]);\n\n  return ButtonCampoo;\n}(React.Component);\n\nexport { ButtonCampoo as default };\nvar styles = StyleSheet.create({\n  connexionText: {\n    textAlign: 'center',\n    marginVertical: 14,\n    fontSize: 16,\n    color: 'white'\n  },\n  touchable: {\n    color: \"white\",\n    borderRadius: 15,\n    width: 150,\n    height: 50,\n    backgroundColor: '#4D3D64',\n    alignSelf: 'center'\n  },\n  button: {\n    color: \"white\",\n    borderRadius: 15,\n    width: 150,\n    height: 50\n  }\n});","map":{"version":3,"sources":["C:/Users/iles/Documents/DevIles/Campoo/app/components/ButtonCampoo.js"],"names":["React","ButtonCampoo","styles","button","props","style","onPress","touchable","connexionText","children","Component","StyleSheet","create","textAlign","marginVertical","fontSize","color","borderRadius","width","height","backgroundColor","alignSelf"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;IAIqBC,Y;;;;;;;;;;;;;6BAET;AAGJ,aAEQ,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,MAAR,EAAgB,KAAKC,KAAL,CAAWC,KAA3B,CAAzB;AAA6D,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACM,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoC,KAAKJ,KAAL,CAAWK,QAA/C,CADJ,CADJ,CAFR;AAUH;;;;EAfqCT,KAAK,CAACU,S;;SAA3BT,Y;AAqBrB,IAAMC,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAmB;AAC9BJ,EAAAA,aAAa,EAAC;AAEVK,IAAAA,SAAS,EAAE,QAFD;AAGVC,IAAAA,cAAc,EAAC,EAHL;AAIVC,IAAAA,QAAQ,EAAC,EAJC;AAKVC,IAAAA,KAAK,EAAC;AALI,GADgB;AAS7BT,EAAAA,SAAS,EAAE;AAGPS,IAAAA,KAAK,EAAE,OAHA;AAIPC,IAAAA,YAAY,EAAC,EAJN;AAKPC,IAAAA,KAAK,EAAC,GALC;AAMPC,IAAAA,MAAM,EAAC,EANA;AAOPC,IAAAA,eAAe,EAAE,SAPV;AAQPC,IAAAA,SAAS,EAAC;AARH,GATkB;AAuB7BlB,EAAAA,MAAM,EAAE;AACLa,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,YAAY,EAAC,EAFR;AAGLC,IAAAA,KAAK,EAAC,GAHD;AAILC,IAAAA,MAAM,EAAC;AAJF;AAvBqB,CAAnB,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Text, StyleSheet, TouchableOpacity, View} from 'react-native';\r\n\r\nexport default class ButtonCampoo extends React.Component {\r\n\r\n    render(){\r\n\r\n\r\n        return(\r\n       \r\n                <TouchableOpacity style={[styles.button, this.props.style]}  onPress={this.props.onPress}>\r\n                    <View style={styles.touchable}>\r\n                        <Text style={styles.connexionText}>{this.props.children}</Text>\r\n                    </View>\r\n                </TouchableOpacity>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create ({\r\n    connexionText:{\r\n        \r\n        textAlign :'center',\r\n        marginVertical:14,\r\n        fontSize:16,\r\n        color:'white',\r\n  \r\n     },\r\n     touchable: {\r\n        \r\n        \r\n         color: \"white\", \r\n         borderRadius:15, \r\n         width:150, \r\n         height:50, \r\n         backgroundColor: '#4D3D64', \r\n         alignSelf:'center',\r\n        \r\n        },\r\n  \r\n     \r\n\r\n     button :{\r\n        color: \"white\", \r\n        borderRadius:15, \r\n        width:150, \r\n        height:50, \r\n       // backgroundColor: '#4D3D64', \r\n        \r\n    },\r\n\r\n\r\n   \r\n\r\n \r\n\r\n \r\n});"]},"metadata":{},"sourceType":"module"}